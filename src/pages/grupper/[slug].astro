---
import ArticleLayout from "@/layouts/ArticleLayout.astro";

import Card from "@/components/Card/Card.astro";
import CardContent from "@/components/Card/CardContent.astro";
import CardField from "@/components/Card/CardField.astro";
import { Image } from "astro:assets";

import {
  getEntry,
  render,
  getCollection,
  type ValidContentEntrySlug,
  type CollectionEntry,
} from "astro:content";
import Link from "@/components/LinkButton/Link.astro";

export async function getStaticPaths() {
  const entries = await getCollection("grupper");
  const list = entries.map((entry) => ({ params: { slug: entry.slug } }));
  return list;
}

const { slug }: { slug: ValidContentEntrySlug<"grupper"> } = Astro.params;
const entry = await getEntry("grupper", slug);
const { name, logo, leaders, email } = entry.data;

// Witchcraft? Yes. Works? Also yes. Fix if you can plz.
const rankedLeaders = await (leaders ?? []).reduce<
  | { [title: string]: CollectionEntry<"ledere">[] }
  | Promise<{ [title: string]: CollectionEntry<"ledere">[] }>
>(async (acc, ref) => {
  const leader = await getEntry(ref);
  const title =
    leader.data.leaderOf.find((group) => group.group.slug === slug)?.title ??
    "Leder";
  let nextAcc = await acc;
  nextAcc[title] = [leader, ...(nextAcc[title] ?? [])];
  return nextAcc;
}, {});

const { Content } = await render(entry);
---

<ArticleLayout title={name}>
  <Image src={logo} alt={`${name} logo`} class="w-56 rounded-lg" />

  <Content />

  <Card class="mt-12 w-full max-w-screen-sm">
    <CardContent>
      <CardField title="Email">
        <Link href={`mailto:${email}`}>{email}</Link>
      </CardField>

      <h2 class="my-3 text-lg leading-none">Ledelse</h2>
      {
        Object.entries(rankedLeaders).map(([title, leaders]) => (
          <CardField title={title}>
            {leaders.map((leader) => (
              <>
                <Link href={`/ledere/${leader.slug}`}>{leader.data.name}</Link>
                <span class="mr-1 hidden last:hidden sm:inline-block">,</span>
              </>
            ))}
          </CardField>
        ))
      }
    </CardContent>
  </Card>
</ArticleLayout>
